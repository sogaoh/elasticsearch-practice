version: "2"

services:
  elasticsearch:
    image: elasticsearch:7.6.0
    #build:
    #  context: ./docker
    #  dockerfile: elasticsearch/Dockerfile
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - esnet
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./docker/elasticsearch/install-plugin.sh:/tmp/install-plugin.sh
    entrypoint: >
      bash -c "chmod +x /tmp/install-plugin.sh &&
               /tmp/install-plugin.sh analysis-kuromoji &&
              docker-entrypoint.sh"

  kibana:
    image: kibana:7.6.0
    #build:
    #  context: ./docker
    #  dockerfile: kibana/Dockerfile
    container_name: kibana
    ports:
      - 5601:5601
    networks:
      - esnet
  
  logstash:
    image: logstash:7.6.0
    #build:
    #  context: ./docker
    #  dockerfile: logstash/Dockerfile
    container_name: logstash
    volumes:
      - ./docker/logstash/mysql-connector-java-8.0.19.jar:/usr/share/logstash/mysql-connector-java-8.0.19.jar
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - 5044:5044
      - 9600:9600
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch  
    networks:
      - esnet

  db:
    image: mysql:8.0
    #build:
    #  context: ./docker
    #  dockerfile: mysql/Dockerfile
    container_name: mysql
    volumes:
      - db-store:/var/lib/mysql
      - ./logs:/var/log/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/sql/1_world.sql.gz:/docker-entrypoint-initdb.d/1_world.sql.gz
      - ./docker/mysql/sql/2_ALTER.sql:/docker-entrypoint-initdb.d/2_ALTER.sql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - TZ=${TZ}
    ports:
      - ${DB_PORT}:3306
    networks:
      - esnet

networks:
  esnet:

volumes:
  db-store:
    external: true
  #logs:
  #  external: true
  es-data:
    external: true
